PS C:\...\Part_1\1.6> docker build . -t web-server
[+] Building 0.1s (5/5) FINISHED
 => [internal] load build definition from Dockerfile                                                 0.0s
 => => transferring dockerfile: 98B                                                                  0.0s
 => [internal] load .dockerignore                                                                    0.0s
 => => transferring context: 2B                                                                      0.0s
 => [internal] load metadata for docker.io/devopsdockeruh/simple-web-service:alpine                  0.0s
 => [1/1] FROM docker.io/devopsdockeruh/simple-web-service:alpine                                    0.0s
 => exporting to image                                                                               0.0s
 => => exporting layers                                                                              0.0s
 => => writing image sha256:978fbf315695ef5a3ec2e77ee411c4dcd9aa9b867fbc7ea3d26962545fda0585         0.0s
 => => naming to docker.io/library/web-server                                                        0.0s

Use 'docker scan' to run Snyk tests against images to find vulnerabilities and learn how to fix them
PS C:\...\Part_1\1.6> docker images
REPOSITORY                          TAG       IMAGE ID       CREATED          SIZE
hello_docker_additional             latest    8af2cdfb0d54   16 minutes ago   5.61MB
hello-docker                        latest    9520f42e6e23   28 minutes ago   5.61MB
ubuntu                              latest    d2e4e1f51132   2 weeks ago      77.8MB
devopsdockeruh/simple-web-service   ubuntu    4e3362e907d5   14 months ago    83MB
devopsdockeruh/simple-web-service   alpine    fd312adc88e0   14 months ago    15.7MB
web-server                          latest    978fbf315695   14 months ago    15.7MB
devopsdockeruh/pull_exercise        latest    d9854bc0e13a   3 years ago      75.3MB

PS C:\...\Part_1\1.6> docker run web-server
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:   export GIN_MODE=release
 - using code:  gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /*path                    --> server.Start.func1 (3 handlers)
[GIN-debug] Listening and serving HTTP on :8080
